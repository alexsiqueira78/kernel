{"version":3,"sources":["components/navigation/styles.js","components/navigation/KernelNavigationItem.js","components/navigation/KernelNavigationGroup.js","components/navigation/KernelNavigation.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","profileButton","position","right","marginTop","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","KernelNavigationItem","id","title","onClickMenu","ListItem","button","key","onClick","ListItemIcon","ListItemText","primary","KernelNavigationGroup","href","data-toggle","aria-expanded","className","KernelNavigation","props","classes","useTheme","navigation","React","useState","open","setOpen","setMenu","createMenu","item","type","Divider","menu","handleChangeMenu","Fragment","IconButton","color","aria-label","edge","clsx","Drawer","variant","anchor","paper","direction","map","children","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1702f8c9.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  profileButton: {\r\n    position: 'absolute',\r\n    right: '0px',\r\n    marginTop: '-25px',\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n    marginTop: '50px',\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n    marginTop: '50px',\r\n  },\r\n}));\r\n","import React from 'react';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nconst KernelNavigationItem = ({ id, title, onClickMenu }) => {\r\n    return (\r\n        <ListItem button key={id} onClick={onClickMenu}>\r\n            <ListItemIcon><PersonIcon /></ListItemIcon>\r\n            <ListItemText primary={title} />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default KernelNavigationItem;","import React from 'react';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst KernelNavigationGroup = ({ id, title }) => {\r\n    return (\r\n        <ListItem key={id}>\r\n            <ListItemIcon><InfoIcon /></ListItemIcon>\r\n            <a href={\"#page\" + id} data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">\r\n                <ListItemText primary={title}></ListItemText>\r\n            </a>\r\n        </ListItem> \r\n    )        \r\n}\r\n\r\n\r\n\r\nexport default KernelNavigationGroup;","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\n\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\n\r\nimport { useStyles } from './styles';\r\n\r\nimport './style.css';\r\n\r\n\r\n\r\nimport { logout } from '../../services/auth';\r\nimport KernelNavigationItem from './KernelNavigationItem';\r\nimport KernelNavigationGroup from './KernelNavigationGroup';\r\n\r\n\r\nfunction KernelNavigation(props) {\r\n\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { navigation } = props;\r\n    const [open, setOpen] = React.useState(true);\r\n    const [menu, setMenu] = React.useState(\"NONE\");\r\n    const [exit, setExit] = React.useState(false);\r\n\r\n\r\n\r\n\r\n\r\n    const handleChangeMenu = (menu) => {\r\n        setMenu(menu);\r\n    }\r\n\r\n    const handleChangeMenuNone = () => {\r\n        setMenu(\"NONE\");\r\n    }\r\n\r\n\r\n    const handleChange = event => {\r\n        setMenu(menu);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function handleDrawerOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        setExit(true);\r\n    }\r\n\r\n\r\n\r\n    const renderRedirect = () => {\r\n        if (exit) {\r\n            return <Redirect to='/' />\r\n        }\r\n    }\r\n\r\n    function createMenu(item) {\r\n        return item.type == 'divider' ? <Divider key={item.id} /> : <KernelNavigationItem id={item.id} title={item.title} onClickMenu={() => handleChangeMenu(\"mnUSUARIO\")} />\r\n    }\r\n\r\n    function childrens(itens) {\r\n        return itens.map(function (item) {\r\n            return createMenu(item)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"Open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}> v. 1.0.4.0\r\n                            <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {props.navigation.map(function (item) {\r\n                    if (item.children) {\r\n                        return (\r\n                            <React.Fragment>\r\n                                <KernelNavigationGroup id={item.id} title={item.title} />\r\n                                <div key={\"div\" + item.id} id={\"page\" + item.id} className=\"collapse list-unstyled-toggle\">\r\n                                    {childrens(item.children)}\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )\r\n\r\n                    } else {\r\n                        return createMenu(item)\r\n                    }\r\n                })}\r\n            </Drawer>\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default KernelNavigation;","import React from 'react';\nimport './App.css';\n\nimport KernelNavigation from './components/navigation/KernelNavigation';\n\nfunction App() {\n\n  const menu = [\n    {\n      'id': 'applications',\n      'title': 'Applications',\n      'type': 'group', // group, collapse, link\n      'icon': 'apps',\n      'url': '/apps/calendar', //optional\n      'children': [\n        {\n          'id': 'calendar',\n          'title': 'Calendar',\n          'type': 'item',\n          'icon': 'today',\n          'url': '/apps/calendar'\n        },\n        {\n          'id': 'divider1',\n          'title': 'xxxx',\n          'type': 'divider'\n        },\n        {\n          'id': 'project',\n          'title': 'Project',\n          'type': 'item',\n          'url': '/apps/dashboards/project'\n        }\n      ]\n    },\n\n    {\n      'id': 'cadastro',\n      'title': 'Principal',\n      'type': 'group',\n      'icon': 'apps',\n      'children': [\n        {\n          'id': 'empresa',\n          'title': 'Empresa',\n          'type': 'item',\n          'icon': 'today',\n          'url': '/app/empresa'\n        },\n        {\n          'id': 'rep',\n          'title': 'REP',\n          'type': 'item',\n          'url': '/app/rep'\n        },\n        {\n          'id': 'empregado',\n          'title': 'Empregado',\n          'type': 'item',\n          'url': '/app/empregado'\n        }\n      ]\n    },\n\n  ];\n\n  return (\n    <KernelNavigation navigation={menu} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}